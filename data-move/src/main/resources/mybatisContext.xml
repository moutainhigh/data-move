<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<aop:aspectj-autoproxy proxy-target-class="true" />

	<tx:annotation-driven
		transaction-manager="transactionManager" />
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="datastore" />

	<bean id="datastore"
		class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="url"
			value="${jdbc.protocol}://${jdbc.host}:${jdbc.port}/${jdbc.database}?${jdbc.param}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="driverClassName" value="${jdbc.driver.class}" />
		<property name="filters" value="${filters}" />

		<property name="maxActive" value="${maxActive}" />
		<property name="initialSize" value="${initialSize}" />
		<property name="maxWait" value="${maxWait}" />
		<property name="minIdle" value="${minIdle}" />

		<property name="timeBetweenEvictionRunsMillis"
			value="${timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis"
			value="${minEvictableIdleTimeMillis}" />

		<property name="validationQuery" value="${validationQuery}" />
		<property name="testWhileIdle" value="${testWhileIdle}" />
		<property name="testOnBorrow" value="${testOnBorrow}" />
		<property name="testOnReturn" value="${testOnReturn}" />
		<property name="maxOpenPreparedStatements"
			value="${maxOpenPreparedStatements}" />
		<property name="removeAbandoned" value="${removeAbandoned}" /> <!-- 打开removeAbandoned功能 -->
		<property name="removeAbandonedTimeout"
			value="${removeAbandonedTimeout}" /> <!-- 1800秒，也就是30分钟 -->
		<property name="logAbandoned" value="${logAbandoned}" /> <!-- 关闭abanded连接时输出错误日志 -->
	</bean>

	<!-- configLocation为mybatis属性 mapperLocations为所有mapper -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean"
		p:dataSource-ref="datastore"
		p:configLocation="classpath:mybatis-config.xml"
		p:mapperLocations="classpath:com/ujuit/datamove/mapper/*Mapper.xml" />
	<bean id="sqlSessionTemplate" scope="prototype"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
		<constructor-arg index="1" value="SIMPLE" />
	</bean>

	<bean id="batchSqlSessionTemplate" scope="prototype"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
		<constructor-arg index="1" value="SIMPLE" /><!-- -BATCH -->
	</bean>

	<bean id="dao" name="mapper"
		class="com.ujuit.sysmanager.core.mybatis.impl.DaoImpl"
		p:dataType="mysql" p:sqlSessionTemplate-ref="sqlSessionTemplate" />



	
		<tx:annotation-driven transaction-manager="transactionManagerEEx" />
	<bean id="transactionManagerEEx"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="datastoreEEx" />

	<bean id="datastoreEEx" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="url"
			value="${jdbc2.protocol}://${jdbc2.host}:${jdbc2.port}/${jdbc2.database}?${jdbc2.param}" />
		<property name="username" value="${jdbc2.username}" />
		<property name="password" value="${jdbc2.password}" />
		<property name="driverClassName" value="${jdbc2.driver.class}" />
		<property name="filters" value="${filters}" />

		<property name="maxActive" value="${maxActive}" />
		<property name="initialSize" value="${initialSize}" />
		<property name="maxWait" value="${maxWait}" />
		<property name="minIdle" value="${minIdle}" />

		<property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />

		<property name="validationQuery" value="${validationQuery}" />
		<property name="testWhileIdle" value="${testWhileIdle}" />
		<property name="testOnBorrow" value="${testOnBorrow}" />
		<property name="testOnReturn" value="${testOnReturn}" />
		<property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}" />
		<property name="removeAbandoned" value="${removeAbandoned}" /> <!-- 打开removeAbandoned功能 -->
		<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" /> <!-- 1800秒，也就是30分钟 -->
		<property name="logAbandoned" value="${logAbandoned}" /> <!-- 关闭abanded连接时输出错误日志 -->
	</bean>

	<!-- configLocation为mybatis属性 mapperLocations为所有mapper -->
	<bean id="sqlSessionFactoryEEx" class="org.mybatis.spring.SqlSessionFactoryBean"
		p:dataSource-ref="datastoreEEx" p:configLocation="classpath:mybatis-config.xml"
		p:mapperLocations="classpath:com/ujuit/datamove/mapper/*Mapper.xml" />


	<bean id="sqlSessionTemplateEEx" scope="prototype"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactoryEEx" />
		<constructor-arg index="1" value="SIMPLE" />
	</bean>

	<bean id="batchSqlSessionTemplateEEx" scope="prototype"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactoryEEx" />
		<constructor-arg index="1" value="SIMPLE" /><!-- -BATCH -->
	</bean>

	<bean id="daoEEx"  name="daoEEx"  class="com.ujuit.sysmanager.core.mybatis.impl.DaoImpl"
		p:dataType="mysql" p:sqlSessionTemplate-ref="sqlSessionTemplateEEx" />
	

</beans>
